<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Long-Term-Unemployment-Statistics)' inline='true' name='federated.08mvvgk09k8d6s19hlk050vq9pdc' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Long-Term-Unemployment-Statistics' name='excel-direct.1qen09h1ut9h0p169ynzf0d2jlbb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/Gaelan/Dropbox/# Documents/# Courses/Tableau/Section 3 - Timeseries, Aggregation and Filters/Long-Term-Unemployment-Statistics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1qen09h1ut9h0p169ynzf0d2jlbb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D1709:no:A1:D1709:0' header='yes' outcome='6'>
            <column datatype='string' name='Age' ordinal='0' />
            <column datatype='string' name='Gender' ordinal='1' />
            <column datatype='date' name='Period' ordinal='2' />
            <column datatype='integer' name='Unemployed' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Period</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Period]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Period</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unemployed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Unemployed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1709:no:A1:D1709:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Age]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Age]' derivation='None' name='[none:Age:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/Gaelan/Dropbox/# Documents/# Courses/Tableau/Section 3 - Timeseries, Aggregation and Filters/Sheet1 (Long-Term-Unemployment-Statistics).tde' schema='Extract' tablename='Extract' update-time='01/27/2017 08:27:09 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1708' timestamp-start='2017-01-27 08:27:09.018' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;16 to 19 years&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;65 years and over&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1708</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Men&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Women&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1708</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1708.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1708</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1708.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Period</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Period</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>122</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2005-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-02-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>1708</statistic>
                <statistic aggregation='Median' datatype='date'>#2010-02-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unemployed</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Unemployed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unemployed</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>594</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>440463000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>257882.31850117096</statistic>
                <statistic aggregation='Min' datatype='integer'>9000</statistic>
                <statistic aggregation='Max' datatype='integer'>1011000</statistic>
                <statistic aggregation='Stdev' datatype='real'>197060.28943435065</statistic>
                <statistic aggregation='StdevP' datatype='real'>197002.59354980724</statistic>
                <statistic aggregation='Var' datatype='real'>38832757671.95005</statistic>
                <statistic aggregation='VarP' datatype='real'>38810021865.350548</statistic>
                <statistic aggregation='Count' datatype='integer'>1708</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>179875137000000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.513716' measure-ordering='alphabetic' measure-percentage='0.486284' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Age:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;16 to 19 years&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;45 to 54 years&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;35 to 44 years&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;65 years and over&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;25 to 34 years&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;55 to 64 years&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;20 to 24 years&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Long-Term-Unemployment-Statistics)' name='federated.08mvvgk09k8d6s19hlk050vq9pdc' />
          </datasources>
          <datasource-dependencies datasource='federated.08mvvgk09k8d6s19hlk050vq9pdc'>
            <column datatype='string' name='[Age]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='date' name='[Period]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Unemployed]' role='measure' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Unemployed]' derivation='Sum' name='[sum:Unemployed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Period]' derivation='Month-Trunc' name='[tmn:Period:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08mvvgk09k8d6s19hlk050vq9pdc].[none:Gender:nk]'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08mvvgk09k8d6s19hlk050vq9pdc].[none:Gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08mvvgk09k8d6s19hlk050vq9pdc].[sum:Unemployed:qk]' value='' />
            <format attr='font-size' field='[federated.08mvvgk09k8d6s19hlk050vq9pdc].[sum:Unemployed:qk]' value='12' />
            <format attr='font-weight' field='[federated.08mvvgk09k8d6s19hlk050vq9pdc].[sum:Unemployed:qk]' value='bold' />
            <format attr='font-size' field='[federated.08mvvgk09k8d6s19hlk050vq9pdc].[tmn:Period:qk]' value='12' />
            <format attr='font-weight' field='[federated.08mvvgk09k8d6s19hlk050vq9pdc].[tmn:Period:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.08mvvgk09k8d6s19hlk050vq9pdc].[none:Age:nk]' />
              <text column='[federated.08mvvgk09k8d6s19hlk050vq9pdc].[none:Age:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='464' />
                <format attr='maxheight' value='464' />
                <format attr='minwidth' value='935' />
                <format attr='maxwidth' value='935' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08mvvgk09k8d6s19hlk050vq9pdc].[sum:Unemployed:qk]</rows>
        <cols>[federated.08mvvgk09k8d6s19hlk050vq9pdc].[tmn:Period:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.08mvvgk09k8d6s19hlk050vq9pdc].[none:Age:nk]' type='color' />
            <card param='[federated.08mvvgk09k8d6s19hlk050vq9pdc].[none:Gender:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08mvvgk09k8d6s19hlk050vq9pdc].[none:Age:nk]</field>
            <field>[federated.08mvvgk09k8d6s19hlk050vq9pdc].[none:Gender:nk]</field>
            <field>[federated.08mvvgk09k8d6s19hlk050vq9pdc].[tmn:Period:ok]</field>
            <field>[federated.08mvvgk09k8d6s19hlk050vq9pdc].[yr:Period:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      STn7OhGPAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
